@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -webkit-flex:  $values;
    -ms-flex:  $values;
    flex:  $values;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;  
    -moz-box-ordinal-group: $val;     
    -ms-flex-order: $val;     
    -webkit-order: $val;  
    order: $val;
}
// example:
//.wrapper {
//    @include flexbox();
//}
//
//.item {
//    @include flex(1 200px);
//    @include order(2);
//}

 @mixin all-transitions($time) { 
     -webkit-transition: all $time ease-out;
     -moz-transition: all $time ease-out;
     -ms-transition: all $time ease-out;
     -o-transition: all $time ease-out;
     transition: all $time ease-out;
}
@mixin all-transitions($time) { 
    -webkit-transition: all $time ease-out;
    -moz-transition: all $time ease-out;
    -ms-transition: all $time ease-out;
    -o-transition: all $time ease-out;
    transition: all $time ease-out;
}

// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}


.test {
    @include skew(25,10);
    @include transform-origin(top left);
}